{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","placeholder","value","onChange","target","GifGridItem","title","url","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imgaes","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OAEI,uBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOYO,UAAU,iDAAxC,UACI,uBACIA,UAAU,iHACVC,KAAK,OACLC,YAAY,oBACZC,MAAOX,EACPY,SAtBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,UAuBnB,wBAAQH,UAAU,2LAAlB,wB,QC/BCM,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEjC,OAEI,cADA,CACA,OAAKR,UAAU,mIAAf,UACI,qBAAKA,UAAU,sBAAsBS,IAAKD,EAAKE,IAAKH,IACpD,mBAAGP,UAAU,0CAAb,SAAwDO,Q,uBCNvDI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbL,EADa,iDACmCM,UAAUF,GAD7C,+DAEAG,MAAMP,GAFN,cAEbQ,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZW,GAbY,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WAENlB,EAAQC,GACHkB,MAAK,SAAAC,GAEFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAKtB,CAACd,IAEGe,EDlB2BK,CAAapB,GAAjCqB,EAFuB,EAE7Bf,KAAcQ,EAFe,EAEfA,QAEtB,OACI,qCAEKA,GAAW,mBAAG1B,UAAU,gEAAb,yBACZ,oBAAIA,UAAU,sEAAd,SAAqFY,IAErF,qBAAKZ,UAAU,mEAAf,SAGQiC,EAAOb,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdxBY,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,mBAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,mCACI,sBAAKU,UAAU,wBAAf,UACI,sBAAKA,UAAU,iDAAf,UACI,oBAAIA,UAAU,yBAAd,0BACA,oBAAIA,UAAU,4BAAd,yBAGJ,cAAC,EAAD,CAAaV,cAAeA,IAE5B,oBAAIU,UAAU,wBAAd,SAEQmC,EAAWf,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,c,MCdrCwB,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.690855f7.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit} className=\"my-5 sm:flex md:items-center md:content-center\">\r\n            <input\r\n                className=\"block mx-auto text-xl text-gray-600 my-5 outline-none rounded border-b-2 border-gray-400 focus:border-blue-500\"\r\n                type=\"text\"\r\n                placeholder=\"Ingrese un nombre\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button className=\"block border-4 border-gray-200 text-lg font-bold hover:border-gray-800 text-white bg-gray-800 hover:bg-white hover:text-gray-800 transition duration-500  py-3 px-6 mx-auto rounded-full\">Buscar</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        // <div className=\"content-center border-2 rounded-md mb-2 mr-2 overflow-hidden\">\r\n        <div className=\"animate__animated animate__fadeIn my-4 md:my-0 text-center bg-white mx-auto rounded-2xl overflow-hidden border-4 border-gray-800\">\r\n            <img className=\" w-full md:max-h-44\" src={url} alt={title} />\r\n            <p className=\"text-center p-2 font-bold text-blue-600\">{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=4ZL9V2O52rnn6Dcza2ui2YB49hEka93q`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: imgaes, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash text-blue-500 text-xl italic\">Loading ...</p>}\r\n            <h3 className=\"animate__animated animate__fadeIn text-xl font-bold my-2 text-black\">{category}</h3>\r\n\r\n            <div className=\" mx-auto w-full md:container md:flex md:flex-wrap md:gap-5  p-4 \">\r\n\r\n                {\r\n                    imgaes.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state; // {data:[], loading: true}\r\n\r\n}","import { useState } from \"react\";\r\n\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Mob Psycho 100']);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mx-auto p-4\">\r\n                <div className=\"grid grid-cols-1 divide-y divide-blue-500 mb-5\">\r\n                    <h2 className=\"text-2xl font-bold p-2\">GifExpertApp</h2>\r\n                    <h4 className=\"text-xs text-gray-700 p-2\">DevHeber</h4>\r\n                </div>\r\n\r\n                <AddCategory setCategories={setCategories} />\r\n\r\n                <ul className=\"list-disc list-inside\">\r\n                    {\r\n                        categories.map(category => (\r\n                            <GifGrid\r\n                                key={category}\r\n                                category={category}\r\n                            />\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}